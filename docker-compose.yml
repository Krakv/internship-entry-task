services:
  tic-tac-toe-db:
    container_name: tic-tac-toe-db
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME:-tic_tac_toe}
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin}
    networks:
      - tic-tac-toe-api-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-tic_tac_toe}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  tic-tac-toe:
    build: .
    container_name: tic-tac-toe-api
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      
      - GameSettings__BoardSize=${BOARD_SIZE:-3}
      - GameSettings__WinnerLineLength=${WINNER_LINE_LENGTH:-3}
      - GameSettings__SignChangeChance=${SIGN_CHANGE_CHANCE:-10}
      
      - Redis__Host=${REDIS_HOST:-redis}
      
      - ConnectionStrings__DefaultConnection=Host=tic-tac-toe-db;Port=5432;Database=${DB_NAME:-tic_tac_toe};Username=${DB_USER:-admin};Password=${DB_PASSWORD:-admin}
    depends_on:
      tic-tac-toe-db:
        condition: service_healthy
    networks:
      - tic-tac-toe-api-network
    restart: unless-stopped
   
  redis:
    container_name: redis
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - tic-tac-toe-api-network
      
volumes:
  postgres_data:
  redis-data:

networks:
  tic-tac-toe-api-network:
    driver: bridge